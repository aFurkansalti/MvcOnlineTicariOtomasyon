@model MvcOnlineTicariOtomasyon.Models.Siniflar.Urun

@{
    ViewBag.Title = "UrunGetir";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2 class="my-4">Ürün Güncelleme Sayfası</h2>
@using (Html.BeginForm("UrunGuncelle", "Urun", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.HiddenFor(x => x.UrunId)
    @Html.LabelFor(x => x.UrunAd, new { @id = "urunAdLabel" })
    @Html.TextBoxFor(x => x.UrunAd, new { @class = "form-control", @id = "urunAdTextBox" })
    @*<input id="urunAdTextBox" class="form-control" name="UrunAd" />*@
    @*<span id="urunAdError" class="error-message" style="color: red;"></span>*@
    @Html.ValidationMessageFor(x => x.UrunAd, "", new { @class = "text-danger" })

    <br />
    @Html.LabelFor(x => x.Marka, new { @id = "markaLabel" })
    @Html.TextBoxFor(x => x.Marka, new { @class = "form-control", @id = "markaTextBox" })
    @*<span id="markaError" class="error-message" style="color: red;"></span>*@
    @Html.ValidationMessageFor(x => x.Marka, "", new { @class = "text-danger" })
    <br />
    @Html.LabelFor(x => x.Stok, new { @id = "stokLabel" })
    @Html.TextBoxFor(x => x.Stok, new { @class = "form-control", @id = "stokTextBox", @type = "number" })
    @*<span id="stokError" , class="error-message" style="color: red;"></span>*@
    @Html.ValidationMessageFor(x => x.Stok, "", new { @class = "text-danger" })
    <br />
    @Html.LabelFor(x => x.AlisFiyat, new { @id = "alisFiyatLabel" })
    @Html.TextBoxFor(x => x.AlisFiyat, new { @class = "fiyat form-control", @type = "text", @id = "alisFiyatTextBox" })
    @*<span id="alisFiyatError" class="error-message" style="color: red;"></span>*@
    @Html.ValidationMessageFor(x => x.AlisFiyat, "", new { @class = "text-danger" })
    <br />
    @Html.LabelFor(x => x.SatisFiyat, new { @id = "satisFiyatLabel" })
    @Html.TextBoxFor(x => x.SatisFiyat, new { @class = "fiyat form-control", @id = "satisFiyatTextBox", @type = "text" })
    @Html.ValidationMessageFor(x => x.SatisFiyat, "", new { @class = "text-danger" })
    @*<span id="satisFiyatError" class="error-message" style="color: red;"></span>*@
    <br />
    @Html.LabelFor(x => x.Kategori.KategoriId)
    @Html.DropDownListFor(x => x.KategoriId, (List<SelectListItem>)ViewBag.kategoriList, new { @class = "form-control" })
    @Html.ValidationMessageFor(x => x.Kategori.KategoriId, "", new { @class = "text-danger" })
    @*@Html.TextBoxFor(x => x.KategoriId, new { @class = "form-control" })*@
    <br />
    @Html.LabelFor(x => x.UrunGorsel)
    @Html.TextBoxFor(x => x.UrunGorsel, new { @class = "form-control-file", @type = "file" })
    @Html.ValidationMessageFor(x => x.UrunGorsel, "", new { @class = "text-danger", @required = "required" })
    <br />
    <button id="submitButton" class="btn btn-success mr-2">Kaydet</button>
    <a href="/Urun/Index" class="btn btn-danger">İptal</a>
    @*</form>*@
}

<script>
    $(document).ready(function () {
        $('#submitButton').click(function () {

            var fiyatValue = $('.fiyat').val();

            // Fiyat değerini doğru formatta kontrol et
            if (!isValidPriceFormat(fiyatValue)) {
                alert('Geçersiz fiyat formatı. Sadece sayılar ve virgül kullanabilirsiniz.');
                return false; // Formun gönderilmesini engeller
            }

        });

        function isValidPriceFormat(price) {

            var regex = /^[0-9]+(,[0-9]{1,2})?$/;

            return regex.test(price);
        }
    });
</script>