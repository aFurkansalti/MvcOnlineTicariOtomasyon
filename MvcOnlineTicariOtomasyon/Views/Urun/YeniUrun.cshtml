@model MvcOnlineTicariOtomasyon.Models.Siniflar.Urun

@{
    ViewBag.Title = "YeniUrun";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}
<br />
<h2>Yeni Ürün Sayfası</h2>
<br />
<form class="form-group" id="myForm" accept-charset="UTF-8" method="post">
    @Html.LabelFor(x => x.UrunAd, new { @id = "urunAdLabel" })
    @Html.TextBoxFor(x => x.UrunAd, new { @class = "form-control", @id = "urunAdTextBox" })
    <span id="urunAdError" class="error-message" style="color: red;"></span> 
    <br />
    @Html.LabelFor(x => x.Marka)
    @Html.TextBoxFor(x => x.Marka, new { @class = "form-control" })
    <br />
    @Html.LabelFor(x => x.Stok)
    @Html.TextBoxFor(x => x.Stok, new { @class = "form-control" })
    <br />
    @Html.LabelFor(x => x.AlisFiyat)
    @Html.TextBoxFor(x => x.AlisFiyat, new { @class = "form-control" })
    <br />
    @Html.LabelFor(x => x.SatisFiyat)
    @Html.TextBoxFor(x => x.SatisFiyat, new { @class = "form-control" })
    <br />
    @Html.LabelFor(x => x.Kategori.KategoriId)
    @Html.DropDownListFor(x => x.KategoriId, (List<SelectListItem>)ViewBag.kategoriList, "Lütfen bir kategori seçiniz", new { @class = "form-control" })
    @*@Html.TextBoxFor(x => x.KategoriId, new { @class = "form-control" })*@
    <br />
    @Html.LabelFor(x => x.UrunGorsel)
    @Html.TextBoxFor(x => x.UrunGorsel, new { @class = "form-control" })
    <br />
    <button class="btn btn-success mr-2">Kaydet</button>
    <a href="/Urun/Index" class="btn btn-danger">İptal</a>
</form>


<script>
    $(document).ready(function () {
        $("#urunAdTextBox").on("change", function () {
            validationTextBox("#urunAdLabel", "#urunAdTextBox", "#urunAdError", "Lütfen ürün adını giriniz!", 30);
        });

        $("#myForm").submit((event) => {
            if (!validationTextBox("#urunAdLabel", "#urunAdTextBox", "#urunAdError", "Lütfen ürün adını giriniz!", 30)) {
                event.preventDefault();
            }

            
        })

        function validationTextBox(labelId, textBoxId, errorId, message, charLength) {
            var urunAdTextBox = $(textBoxId);
            var urunAdTextBoxValue = urunAdTextBox.val();
            var urunAdLabel = $(labelId);
            var urunAdError = $(errorId);

            urunAdError.text("");
            urunAdTextBox.css("border-color", "black");
            urunAdLabel.css("color", "black");

            if (urunAdTextBoxValue === "") {
                urunAdError.text(message);
                urunAdTextBox.css("border-color", "red");
                urunAdLabel.css("color", "red");
                return false;
            } else if (urunAdTextBoxValue.length > charLength) {
                urunAdError.text(`En fazla ${charLength} karakter yazabilirsiniz!`);
                urunAdTextBox.css("border-color", "red");
                urunAdLabel.css("color", "red");
                return false;
            }

            return true;
        }

    })

    
</script>
